var nodeMaterial = new BABYLON.NodeMaterial("node");
nodeMaterial.mode = BABYLON.NodeMaterialModes.Material;

// InputBlock
var position = new BABYLON.InputBlock("position");
position.visibleInInspector = false;
position.visibleOnFrame = false;
position.target = 1;
position.setAsAttribute("position");

// VectorSplitterBlock
var VectorSplitter = new BABYLON.VectorSplitterBlock("VectorSplitter");
VectorSplitter.visibleInInspector = false;
VectorSplitter.visibleOnFrame = false;
VectorSplitter.target = 4;

// VectorMergerBlock
var VectorMerger = new BABYLON.VectorMergerBlock("VectorMerger");
VectorMerger.visibleInInspector = false;
VectorMerger.visibleOnFrame = false;
VectorMerger.target = 4;
VectorMerger.xSwizzle = "x";
VectorMerger.ySwizzle = "y";
VectorMerger.zSwizzle = "z";
VectorMerger.wSwizzle = "w";

// TrigonometryBlock
var Sin = new BABYLON.TrigonometryBlock("Sin");
Sin.visibleInInspector = false;
Sin.visibleOnFrame = false;
Sin.target = 4;
Sin.operation = BABYLON.TrigonometryBlockOperations.Sin;

// AddBlock
var Add = new BABYLON.AddBlock("Add");
Add.visibleInInspector = false;
Add.visibleOnFrame = false;
Add.target = 4;

// InputBlock
var Time = new BABYLON.InputBlock("Time");
Time.visibleInInspector = false;
Time.visibleOnFrame = false;
Time.target = 1;
Time.value = 0;
Time.min = 0;
Time.max = 0;
Time.isBoolean = false;
Time.matrixMode = 0;
Time.animationType = BABYLON.AnimatedInputBlockTypes.Time;
Time.isConstant = false;

// TransformBlock
var WorldPos = new BABYLON.TransformBlock("WorldPos");
WorldPos.visibleInInspector = false;
WorldPos.visibleOnFrame = false;
WorldPos.target = 1;
WorldPos.complementZ = 0;
WorldPos.complementW = 1;

// InputBlock
var World = new BABYLON.InputBlock("World");
World.visibleInInspector = false;
World.visibleOnFrame = false;
World.target = 1;
World.setAsSystemValue(BABYLON.NodeMaterialSystemValues.World);

// TransformBlock
var Transform = new BABYLON.TransformBlock("Transform");
Transform.visibleInInspector = false;
Transform.visibleOnFrame = false;
Transform.target = 1;
Transform.complementZ = 0;
Transform.complementW = 0;

// InputBlock
var normal = new BABYLON.InputBlock("normal");
normal.visibleInInspector = false;
normal.visibleOnFrame = false;
normal.target = 1;
normal.setAsAttribute("normal");

// LightBlock
var Lights = new BABYLON.LightBlock("Lights");
Lights.visibleInInspector = false;
Lights.visibleOnFrame = false;
Lights.target = 3;

// InputBlock
var cameraPosition = new BABYLON.InputBlock("cameraPosition");
cameraPosition.visibleInInspector = false;
cameraPosition.visibleOnFrame = false;
cameraPosition.target = 1;
cameraPosition.setAsSystemValue(BABYLON.NodeMaterialSystemValues.CameraPosition);

// FragmentOutputBlock
var FragmentOutput = new BABYLON.FragmentOutputBlock("FragmentOutput");
FragmentOutput.visibleInInspector = false;
FragmentOutput.visibleOnFrame = false;
FragmentOutput.target = 2;
FragmentOutput.convertToGammaSpace = false;
FragmentOutput.convertToLinearSpace = false;
FragmentOutput.useLogarithmicDepth = false;

// TransformBlock
var WorldPosViewProjectionTransform = new BABYLON.TransformBlock("WorldPos * ViewProjectionTransform");
WorldPosViewProjectionTransform.visibleInInspector = false;
WorldPosViewProjectionTransform.visibleOnFrame = false;
WorldPosViewProjectionTransform.target = 1;
WorldPosViewProjectionTransform.complementZ = 0;
WorldPosViewProjectionTransform.complementW = 1;

// InputBlock
var ViewProjection = new BABYLON.InputBlock("ViewProjection");
ViewProjection.visibleInInspector = false;
ViewProjection.visibleOnFrame = false;
ViewProjection.target = 1;
ViewProjection.setAsSystemValue(BABYLON.NodeMaterialSystemValues.ViewProjection);

// VertexOutputBlock
var VertexOutput = new BABYLON.VertexOutputBlock("VertexOutput");
VertexOutput.visibleInInspector = false;
VertexOutput.visibleOnFrame = false;
VertexOutput.target = 1;

// Connections
position.output.connectTo(VectorSplitter.xyzIn);
VectorSplitter.x.connectTo(VectorMerger.x);
VectorSplitter.z.connectTo(Add.left);
Time.output.connectTo(Add.right);
Add.output.connectTo(Sin.input);
Sin.output.connectTo(VectorMerger.y);
VectorSplitter.z.connectTo(VectorMerger.z);
VectorMerger.xyz.connectTo(WorldPos.vector);
World.output.connectTo(WorldPos.transform);
WorldPos.output.connectTo(WorldPosViewProjectionTransform.vector);
ViewProjection.output.connectTo(WorldPosViewProjectionTransform.transform);
WorldPosViewProjectionTransform.output.connectTo(VertexOutput.vector);
WorldPos.output.connectTo(Lights.worldPosition);
normal.output.connectTo(Transform.vector);
World.output.connectTo(Transform.transform);
Transform.output.connectTo(Lights.worldNormal);
cameraPosition.output.connectTo(Lights.cameraPosition);
Lights.diffuseOutput.connectTo(FragmentOutput.rgb);

// Output nodes
nodeMaterial.addOutputNode(VertexOutput);
nodeMaterial.addOutputNode(FragmentOutput);
nodeMaterial.build();
